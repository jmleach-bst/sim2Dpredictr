% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_adjacency.R
\name{binary_adjacency}
\alias{binary_adjacency}
\title{Generate an Adjacency Matrix}
\usage{
binary_adjacency(
  im.res,
  neighborhood = "ar1",
  type = c("sparse", "full"),
  r = NULL,
  h = NULL,
  w = NULL,
  include.coords = FALSE,
  print.im = FALSE
)
}
\arguments{
\item{im.res}{A vector defining the dimension of spatial data. The first entry is the
number of rows and the second  entry is the number of columns.}

\item{neighborhood}{Determines how to assign neighbor status to locations; i.e. 1 for neighbors, 0 otherwise.
\code{type = "round"} assigns neighbor status to locations within radius \code{r}. \code{type = "ar1"}
assigns 1 to locations directly above or beside. \code{type = "rectangle"} assigns neighbor status to
locations within \code{w} units to the left or right and  \code{h} units up or down.}

\item{type}{Specifies either sparse (\code{type = "sparse"}) or full (\code{type = "full"}) adjacency matrix.}

\item{r, h, w}{When \code{neighborhood = "round"}, \code{r} specifies the radius within which other locations
are neighbors. When \code{neighborhood = "rectangle"}, \code{w} and \code{h} specify the number of units to
the left/right and above/below the location are to be counted as neighbors.}

\item{include.coords}{If \code{type = "sparse"} and \code{include.coords = TRUE}, then the coordinates of
neighbors are returned along with their indices.}

\item{print.im}{Allows user to print the 2D "image" matrix with index labels to visually verify that the adjacency
matrix is as expected.}
}
\description{
Generates an adjacency matrix where neighbors are weighted 1 and all others are weighted 0.
}
\examples{
## adjacency matrix with sparse structure (i.e., 2 columns) and ar1 neighborhood
sp.ar1 <- binary_adjacency(im.res = c(4, 4),
                           neighborhood = "ar1",
                           type = "sparse")
## adjacency matrix with full structure (i.e., prod(im.dim) rows & columns) and ar1 neighborhood
full.ar1 <- binary_adjacency(im.res = c(4, 4),
                             neighborhood = "ar1",
                             type = "full")

## adjacency matrix with sparse structure (i.e., 2 columns) and rectangle neighborhood
sp.rec <- binary_adjacency(im.res = c(4, 4),
                           neighborhood = "rectangle",
                            w = 1, h = 1,
                            type = "sparse")

## adjacency matrix with sparse structure (i.e., 2 columns) and round neighborhood
sp.round <- binary_adjacency(im.res = c(5, 5),
                             neighborhood = "round",
                             r = 2, type = "sparse")
}
